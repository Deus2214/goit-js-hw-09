{"mappings":"qhBAEA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAAUC,KAC5BC,YAAW,KACLN,EACFI,EAAS,C,SAAEN,E,MAAUC,IAErBM,EAAS,C,SAAEP,E,MAAUC,GAAQ,GAE9BA,EAAM,G,CA5CQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAG9B,SAA6BC,GAC3BA,EAAMC,iBAEN,IAAIC,EAAaC,OAAOH,EAAMI,cAAcf,MAAMgB,OAClD,MAAMC,EAAYH,OAAOH,EAAMI,cAAcG,KAAKF,OAC5CG,EAAkBL,OAAOH,EAAMI,cAAcK,OAAOJ,OAG1D,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAiBE,GAAK,EAEzCvB,EAAcuB,EAAGR,GACdS,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MAEjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqB1B,QAAiBC,OAAW,IAGpD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAElBuB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoB5B,QAAeC,OAAW,IAIpDa,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["\n\nimport Notiflix from 'notiflix';\n\nconst formInputRef = document.querySelector('.form');\n\nformInputRef.addEventListener('submit', onSubmitButtonClick);\n\n\nfunction onSubmitButtonClick(event) {\n  event.preventDefault();\n\n  let firstDelay = Number(event.currentTarget.delay.value);\n  const stepDelay = Number(event.currentTarget.step.value);\n  const amountIteration = Number(event.currentTarget.amount.value);\n\n \n  for (let i = 1; i <= amountIteration; i += 1) {\n  \n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        \n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        \n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay} ms`\n        );\n      });\n\n    firstDelay += stepDelay;\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolved, rejected) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolved({ position, delay });\n      } else {\n        rejected({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolved","rejected","setTimeout","document","querySelector","addEventListener","event","preventDefault","firstDelay","Number","currentTarget","value","stepDelay","step","amountIteration","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.fa4ebc01.js.map"}